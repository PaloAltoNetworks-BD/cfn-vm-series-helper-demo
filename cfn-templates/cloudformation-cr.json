{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Install a server instance protected by an instance of PA-VM-AWS. Luigi Mori - lmori@paloaltonetworks.com. TBD: - BlockMapping for  DeleteOnTermination, work on dependencies",

  "Parameters": {
    "PAVMAWSKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the PA-VM-AWS",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "can contain only ASCII characters."
    },

    "ServerKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the server",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "can contain only ASCII characters."
    },

    "PAVMAWSInstanceType": {
      "Description": "PA-VM-AWS EC2 instance type",
      "Type": "String",
      "Default": "c4.xlarge",
      "AllowedValues": [
        "m3.xlarge",
        "m3.2xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },

    "VPCCidr": {
      "Description": "CIDR Block of VPC",
      "Type": "String",
      "Default": "10.0.0.0/16"
    },

    "PrivateSubnetCidr": {
      "Description": "CIDR Block of Private Subnet",
      "Type": "String",
      "Default": "10.0.254.0/24"
    },

    "PublicSubnetCidr": {
      "Description": "CIDR Block of Public Subnet",
      "Type": "String",
      "Default": "10.0.0.0/24"
    },

    "VMseriesHelperSNSTopicARN": {
      "Type": "String",
      "Description" : "VMSeriesHelper SNS Topic ARN"
    },

    "PAVMAWSAdminPassword": {
      "NoEcho": "true",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "Description" : "Admin password to set on PA-VM-AWS instance"
    },

    "PAVMAWSAuthCode": {
      "Type": "String",
      "Description" : "AuthCode to apply to the PA-VM-AWS-Instance"
    }
  },

  "Mappings": {
    "AWSRegionRelease2PAVMAWSAMI" : {
      "us-east-1"      : { "release610": "ami-ea139582" },
      "us-west-2"      : { "release610": "ami-7995db49" },
      "us-west-1"      : { "release610": "ami-51130714" },
      "eu-west-1"      : { "release610": "ami-f2852c85" },
      "ap-southeast-1" : { "release610": "ami-966040c4" },
      "ap-northeast-1" : { "release610": "ami-83ba8982" },
      "ap-southeast-2" : { "release610": "ami-2d640817" },
      "sa-east-1"      : { "release610": "ami-c7e255da" }
    },

    "SQLSESummitRegionMap" : {
      "us-west-2"      : { "AMI": "ami-3bebb50b" }      
    }
  },

  "Resources": {
    "NewVPC": {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref": "VPCCidr" },
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "InstanceTenancy" : "default"
      }
    },

    "NewPrivateSubnet": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "CidrBlock" : { "Ref": "PrivateSubnetCidr" },
        "VpcId" : { "Ref" : "NewVPC" }
      },
      "DependsOn": "NewVPC"
    },

    "NewPrivateSubnetRT": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
         "VpcId" : { "Ref": "NewVPC" }
      },
      "DependsOn": "NewVPC"
    },

    "PrivateSubnetAssociation": {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "Properties" : {
          "RouteTableId" : { "Ref": "NewPrivateSubnetRT" },
          "SubnetId" : { "Ref": "NewPrivateSubnet" }
       },
       "DependsOn": [ "NewPrivateSubnet", "NewPrivateSubnetRT" ]
    },

    "PAVMAWSPrivateSecurityGroup" : {
       "Type" : "AWS::EC2::SecurityGroup",
       "Properties" : {
          "GroupDescription" : "SG for PA-VM-AWS internal interface",
          "VpcId" : {"Ref" : "NewVPC"},
          "SecurityGroupIngress" : [{
                "IpProtocol" : "-1",
                "FromPort" : "-1",
                "ToPort" : "-1",
                "CidrIp" : "0.0.0.0/0"
             }],
          "SecurityGroupEgress" : [{
             "IpProtocol" : "-1",
             "FromPort" : "-1",
             "ToPort" : "-1",
             "CidrIp" : "0.0.0.0/0"
          }]
       },
       "DependsOn": "NewVPC"
    },

    "NewPublicSubnet": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone": { "Fn::GetAtt": [ "NewPrivateSubnet", "AvailabilityZone" ] },
        "CidrBlock" : { "Ref": "PublicSubnetCidr" },
        "VpcId" : { "Ref" : "NewVPC" }
      },
      "DependsOn": "NewVPC"
    },

    "NewPublicSubnetRT": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
         "VpcId" : { "Ref": "NewVPC" }
      },
      "DependsOn": "NewVPC"
    },

    "PublicSubnetAssociation": {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
         "RouteTableId" : { "Ref": "NewPublicSubnetRT" },
         "SubnetId" : { "Ref": "NewPublicSubnet" }
      },
      "DependsOn": [ "NewPublicSubnetRT", "NewPrivateSubnet" ]
    },

    "NewIG": {
      "Type" : "AWS::EC2::InternetGateway"
    },

    "IGAttachment": {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
          "InternetGatewayId" : { "Ref": "NewIG" },
          "VpcId" : { "Ref": "NewVPC" }
       },
       "DependsOn": [ "NewIG", "NewVPC" ]
    },

    "PublicDefaultRoute": {
       "Type" : "AWS::EC2::Route",
       "Properties" : {
          "DestinationCidrBlock" : "0.0.0.0/0",
          "GatewayId" : { "Ref": "NewIG" },
          "RouteTableId" : { "Ref": "NewPublicSubnetRT" }
       },
       "DependsOn": [ "IGAttachment", "NewPublicSubnetRT", "NewIG" ]
    },

    "PAVMAWSPublicSecurityGroup" : {
       "Type" : "AWS::EC2::SecurityGroup",
       "Properties" : {
          "GroupDescription" : "SG for PA-VM-AWS external interface",
          "VpcId" : {"Ref" : "NewVPC"},
          "SecurityGroupIngress" : [{
                "IpProtocol" : "-1",
                "FromPort" : "-1",
                "ToPort" : "-1",
                "CidrIp" : "0.0.0.0/0"
             }],
          "SecurityGroupEgress" : [{
             "IpProtocol" : "-1",
             "FromPort" : "-1",
             "ToPort" : "-1",
             "CidrIp" : "0.0.0.0/0"
          }]
       },
       "DependsOn": "NewVPC"
    },

    "PAVMAWSMgmtSecurityGroup" : {
       "Type" : "AWS::EC2::SecurityGroup",
       "Properties" : {
          "GroupDescription" : "SG for PA-VM-AWS mgmt interface",
          "VpcId" : {"Ref" : "NewVPC"},
          "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "22",
                "ToPort" : "22",
                "CidrIp" : "0.0.0.0/0"
             },
             {
                "IpProtocol" : "tcp",
                "FromPort" : "443",
                "ToPort" : "443",
                "CidrIp" : "0.0.0.0/0"
             }],
          "SecurityGroupEgress" : [{
             "IpProtocol" : "-1",
             "FromPort" : "-1",
             "ToPort" : "-1",
             "CidrIp" : "0.0.0.0/0"
          }]
       },
       "DependsOn": "NewVPC"
    },

    "PAVMAWSPrivateInterface": {
       "Type" : "AWS::EC2::NetworkInterface",
       "Properties" : {
          "Description" : "PA-VM-AWS private interface",
          "GroupSet" : [ { "Ref": "PAVMAWSPrivateSecurityGroup" } ],
          "SourceDestCheck" : "false",
          "SubnetId" : { "Ref": "NewPrivateSubnet" }
       },
       "DependsOn": [ "NewPrivateSubnet", "PAVMAWSPrivateSecurityGroup" ] 
    },

    "PAVMAWSPublicInterface": {
       "Type" : "AWS::EC2::NetworkInterface",
       "Properties" : {
          "Description" : "PA-VM-AWS public interface",
          "GroupSet" : [ { "Ref": "PAVMAWSPublicSecurityGroup" } ],
          "SourceDestCheck" : "false",
          "SubnetId" : { "Ref": "NewPublicSubnet" }
       },
       "DependsOn": [ "NewPublicSubnetRT", "PAVMAWSPublicSecurityGroup" ]
    },

    "PAVMAWSInstance": {
       "Type" : "AWS::EC2::Instance",
       "Properties" : {
          "AvailabilityZone": { "Fn::GetAtt": [ "NewPrivateSubnet", "AvailabilityZone" ] },
          "DisableApiTermination" : "false",
          "EbsOptimized" : "true",
          "ImageId" : { "Fn::FindInMap" : [ "AWSRegionRelease2PAVMAWSAMI", { "Ref" : "AWS::Region" }, "release610" ] },
          "InstanceType" : { "Ref": "PAVMAWSInstanceType" },
          "KeyName" : { "Ref": "PAVMAWSKeyName" },
          "NetworkInterfaces" : [ {
            "AssociatePublicIpAddress" : "true",
            "DeleteOnTermination" : "true",
            "Description" : "PA-VM-AWS mgmt interface",
            "DeviceIndex" : "0",
            "GroupSet" : [ { "Ref": "PAVMAWSMgmtSecurityGroup" } ],
            "SubnetId" : { "Ref": "NewPublicSubnet" }
          } ]
       },
       "DependsOn": [ "IGAttachment", "NewPublicSubnet", "PAVMAWSMgmtSecurityGroup", "PAVMAWSPublicInterface", "PAVMAWSPrivateInterface" ]
    },

    "PAVMAWSPublicInterfaceAttachment": {
       "Type" : "AWS::EC2::NetworkInterfaceAttachment",
       "Properties" : {
          "DeleteOnTermination": "true",
          "DeviceIndex": "1",
          "InstanceId": { "Ref": "PAVMAWSInstance" },
          "NetworkInterfaceId": { "Ref": "PAVMAWSPublicInterface" }
       },
       "DependsOn": [ "PAVMAWSInstance", "PAVMAWSPublicInterface" ]
    },

    "PrivateDefaultRoute": {
       "Type" : "AWS::EC2::Route",
       "Properties" : {
          "DestinationCidrBlock" : "0.0.0.0/0",
          "NetworkInterfaceId" : { "Ref": "PAVMAWSPrivateInterface" },
          "RouteTableId" : { "Ref": "NewPrivateSubnetRT" }
       },
       "DependsOn": [ "NewPrivateSubnetRT", "PAVMAWSPrivateInterface" ]
    },

    "PAVMAWSPrivateInterfaceAttachment": {
       "Type" : "AWS::EC2::NetworkInterfaceAttachment",
       "Properties" : {
          "DeleteOnTermination": "true",
          "DeviceIndex": "2",
          "InstanceId": { "Ref": "PAVMAWSInstance" },
          "NetworkInterfaceId": { "Ref": "PAVMAWSPrivateInterface" }
       },
       "DependsOn": [ "PAVMAWSInstance", "PAVMAWSPrivateInterface" ]
    },

    "PAVMAWSEIPPublic": {
       "Type" : "AWS::EC2::EIP",
       "Properties" : {
          "Domain" : "vpc"
       },
       "DependsOn": [ "PAVMAWSPublicInterfaceAttachment", "NewVPC" ]
    },

    "PAVMAWSEIPPublicAssociation": {
       "Type": "AWS::EC2::EIPAssociation",
       "Properties": {
          "AllocationId": { "Fn::GetAtt": [ "PAVMAWSEIPPublic", "AllocationId" ] },
          "NetworkInterfaceId": { "Ref": "PAVMAWSPublicInterface" }
       },
       "DependsOn": [ "PAVMAWSPublicInterface", "PAVMAWSEIPPublic" ]
    },

    "ServerSecurityGroup" : {
       "Type" : "AWS::EC2::SecurityGroup",
       "Properties" : {
          "GroupDescription" : "SG for private server",
          "VpcId" : {"Ref" : "NewVPC"},
          "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "22",
                "ToPort" : "22",
                "CidrIp" : "0.0.0.0/0"
             },
             {
                "IpProtocol" : "tcp",
                "FromPort" : "3306",
                "ToPort" : "3306",
                "CidrIp" : "0.0.0.0/0"             
              },
              { 
                "IpProtocol" : "icmp", 
                "FromPort" : "8", 
                "ToPort" : "-1", 
                "CidrIp" : "0.0.0.0/0"
              }],
          "SecurityGroupEgress" : [{
             "IpProtocol" : "-1",
             "FromPort" : "-1",
             "ToPort" : "-1",
             "CidrIp" : "0.0.0.0/0"
          }]
       },
       "DependsOn": "NewVPC"
    },

    "ServerInstance": {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
          "AvailabilityZone": { "Fn::GetAtt": [ "NewPrivateSubnet", "AvailabilityZone" ] },
          "DisableApiTermination" : "false",
          "ImageId" : { "Fn::FindInMap" : [ "SQLSESummitRegionMap", { "Ref" : "AWS::Region" }, "AMI" ] },
          "InstanceType" : "t1.micro",
          "KeyName" : { "Ref": "ServerKeyName" },
          "NetworkInterfaces" : [ {
            "AssociatePublicIpAddress" : "false",
            "DeleteOnTermination" : "true",
            "Description" : "Ubuntu interface",
            "DeviceIndex" : "0",
            "GroupSet" : [ { "Ref": "ServerSecurityGroup" } ],
            "SubnetId" : { "Ref": "NewPrivateSubnet" }
          } ],
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#! /bin/bash\n",

            "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n",

            "echo \"export new_routers='",
              { "Fn::GetAtt": [ "PAVMAWSPrivateInterface", "PrimaryPrivateIpAddress"] }, 
              "'\" >> /etc/dhcp/dhclient-enter-hooks.d/aws-default-route\n",
            "ifdown eth0\n",
            "ifup eth0\n"
            ]]}
          }
      },
      "DependsOn": [ "NewPrivateSubnet", "ServerSecurityGroup" ]
    },

    "AWSMonitorUser" : {
     "Type" : "AWS::IAM::User"
    },

    "AWSMonitorUserKey" : {
     "Type" : "AWS::IAM::AccessKey",
     "Properties" : {
          "UserName" : {"Ref": "AWSMonitorUser"}
      }
    },

    "AWSMonitorPolicy": {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
          "PolicyName" : "AWSMonitoring",
          "PolicyDocument" : {
            "Version" : "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Action": "ec2:Describe*",
              "Resource": "*"
            } ]
          },
          "Users" : [ { "Ref" : "AWSMonitorUser" } ]
      }
  },

    "VMSeriesHelper" : {
       "Type": "Custom::VMSeriesHelper",
       "Version" : "0.1",
       "DeletionPolicy": "Retain",
       "Properties" : {
          "ServiceToken": { "Ref": "VMseriesHelperSNSTopicARN" },
          "PAVMAWSEIPMgmt" : { "Fn::GetAtt": [ "PAVMAWSInstance", "PublicIp" ]},
          "admin_password": { "Ref": "PAVMAWSAdminPassword" },
          "ServerIP": { "Fn::GetAtt": [ "ServerInstance", "PrivateIp"] },
          "PAVMAWSPublicIP": { "Fn::GetAtt": [ "PAVMAWSPublicInterface", "PrimaryPrivateIpAddress"] },
          "PAVMAWSEIPPublic": { "Ref": "PAVMAWSEIPPublic" },
          "PAVMAWSEIPPublicDNS": { "VMSeriesHelper::ConvertToEC2DNS": [ { "Ref": "PAVMAWSEIPPublic" }, { "Ref": "AWS::Region"} ]},
          "auth_code": { "Ref": "PAVMAWSAuthCode" },
          "AWSMonitorUserAccessKey": { "Ref": "AWSMonitorUserKey" },
          "AWSMonitorUserSecretAccessKey": { "Fn::GetAtt": ["AWSMonitorUserKey", "SecretAccessKey"] },
          "AWSMonitorSource": { "Fn::Join": [".", ["ec2", { "Ref": "AWS::Region" }, "amazonaws", "com" ]]},
          "VPCId": {"Ref" : "NewVPC"},
          "IgnorePlaybookFailure": "yes",
          "SQLServerAMIID": { "Fn::FindInMap" : [ "SQLSESummitRegionMap", { "Ref" : "AWS::Region" }, "AMI" ] }
       },
       "DependsOn": ["PAVMAWSEIPPublicAssociation", "AWSMonitorUserKey" ]
    }
  },

  "Outputs": {
    "PAVMAWSEIPMgmt": {
      "Description": "Public IP of PA-VM-AWS Mgmt Interface",
      "Value": { "Fn::GetAtt": [ "PAVMAWSInstance", "PublicIp" ]}
    },
    "PAVMAWSEIPPublic": {
      "Description": "Public IP of PA-VM-AWS Public Interface",
      "Value": { "Ref": "PAVMAWSEIPPublic" }
    },
    "PAVMAWSPublicIP": {
      "Description": "Private IP of PA-VM-AWS Public Interface",
      "Value": { "Fn::GetAtt": [ "PAVMAWSPublicInterface", "PrimaryPrivateIpAddress"] }
    },
    "PAVMAWSPrivateIP": {
      "Description": "Private IP of PA-VM-AWS Private Interface",
      "Value": { "Fn::GetAtt": [ "PAVMAWSPrivateInterface", "PrimaryPrivateIpAddress"] }
    },
    "ServerIP": {
      "Description": "Server private IP address",
      "Value": { "Fn::GetAtt": [ "ServerInstance", "PrivateIp"] }
    },
    "PAVMAWSEIPPublicDNS": {
      "Description": "Public DNS of PA-VM-AWS Public Interface",
      "Value": { "Fn::GetAtt": [ "VMSeriesHelper", "PAVMAWSEIPPublicDNS"] }
    }
  }
}
